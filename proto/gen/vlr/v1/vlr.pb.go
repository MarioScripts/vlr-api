// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: vlr/v1/vlr.proto

package v1

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchStatus int32

const (
	MatchStatus_NONE        MatchStatus = 0
	MatchStatus_NOT_STARTED MatchStatus = 1
	MatchStatus_LIVE        MatchStatus = 2
	MatchStatus_FINISHED    MatchStatus = 3
)

// Enum value maps for MatchStatus.
var (
	MatchStatus_name = map[int32]string{
		0: "NONE",
		1: "NOT_STARTED",
		2: "LIVE",
		3: "FINISHED",
	}
	MatchStatus_value = map[string]int32{
		"NONE":        0,
		"NOT_STARTED": 1,
		"LIVE":        2,
		"FINISHED":    3,
	}
)

func (x MatchStatus) Enum() *MatchStatus {
	p := new(MatchStatus)
	*p = x
	return p
}

func (x MatchStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_vlr_v1_vlr_proto_enumTypes[0].Descriptor()
}

func (MatchStatus) Type() protoreflect.EnumType {
	return &file_vlr_v1_vlr_proto_enumTypes[0]
}

func (x MatchStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchStatus.Descriptor instead.
func (MatchStatus) EnumDescriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{0}
}

type PlayerType int32

const (
	PlayerType_PLAYER          PlayerType = 0
	PlayerType_HEAD_COACH      PlayerType = 1
	PlayerType_ASSISTANT_COACH PlayerType = 2
	PlayerType_MANAGER         PlayerType = 3
)

// Enum value maps for PlayerType.
var (
	PlayerType_name = map[int32]string{
		0: "PLAYER",
		1: "HEAD_COACH",
		2: "ASSISTANT_COACH",
		3: "MANAGER",
	}
	PlayerType_value = map[string]int32{
		"PLAYER":          0,
		"HEAD_COACH":      1,
		"ASSISTANT_COACH": 2,
		"MANAGER":         3,
	}
)

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}

func (x PlayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_vlr_v1_vlr_proto_enumTypes[1].Descriptor()
}

func (PlayerType) Type() protoreflect.EnumType {
	return &file_vlr_v1_vlr_proto_enumTypes[1]
}

func (x PlayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerType.Descriptor instead.
func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{1}
}

type MatchTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Score int32  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Icon  string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *MatchTeam) Reset() {
	*x = MatchTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchTeam) ProtoMessage() {}

func (x *MatchTeam) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchTeam.ProtoReflect.Descriptor instead.
func (*MatchTeam) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{0}
}

func (x *MatchTeam) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MatchTeam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MatchTeam) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *MatchTeam) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamOne     *MatchTeam           `protobuf:"bytes,2,opt,name=team_one,json=teamOne,proto3" json:"team_one,omitempty"`
	TeamTwo     *MatchTeam           `protobuf:"bytes,3,opt,name=team_two,json=teamTwo,proto3" json:"team_two,omitempty"`
	Maps        []string             `protobuf:"bytes,4,rep,name=maps,proto3" json:"maps,omitempty"`
	MatchStatus MatchStatus          `protobuf:"varint,5,opt,name=match_status,json=matchStatus,proto3,enum=vlr.v1.MatchStatus" json:"match_status,omitempty"`
	Tournament  *Tournament          `protobuf:"bytes,6,opt,name=tournament,proto3" json:"tournament,omitempty"`
	Date        *timestamp.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	BestOf      int32                `protobuf:"varint,8,opt,name=best_of,json=bestOf,proto3" json:"best_of,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{1}
}

func (x *Match) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Match) GetTeamOne() *MatchTeam {
	if x != nil {
		return x.TeamOne
	}
	return nil
}

func (x *Match) GetTeamTwo() *MatchTeam {
	if x != nil {
		return x.TeamTwo
	}
	return nil
}

func (x *Match) GetMaps() []string {
	if x != nil {
		return x.Maps
	}
	return nil
}

func (x *Match) GetMatchStatus() MatchStatus {
	if x != nil {
		return x.MatchStatus
	}
	return MatchStatus_NONE
}

func (x *Match) GetTournament() *Tournament {
	if x != nil {
		return x.Tournament
	}
	return nil
}

func (x *Match) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Match) GetBestOf() int32 {
	if x != nil {
		return x.BestOf
	}
	return 0
}

type Tournament struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Tournament) Reset() {
	*x = Tournament{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tournament) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tournament) ProtoMessage() {}

func (x *Tournament) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tournament.ProtoReflect.Descriptor instead.
func (*Tournament) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{2}
}

func (x *Tournament) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tournament) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MatchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matches []*Match `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *MatchesResponse) Reset() {
	*x = MatchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesResponse) ProtoMessage() {}

func (x *MatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesResponse.ProtoReflect.Descriptor instead.
func (*MatchesResponse) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{3}
}

func (x *MatchesResponse) GetMatches() []*Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

type MatchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchStatus  MatchStatus          `protobuf:"varint,1,opt,name=match_status,json=matchStatus,proto3,enum=vlr.v1.MatchStatus" json:"match_status,omitempty"`
	Date         *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	TournamentId int64                `protobuf:"varint,3,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
}

func (x *MatchesRequest) Reset() {
	*x = MatchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesRequest) ProtoMessage() {}

func (x *MatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesRequest.ProtoReflect.Descriptor instead.
func (*MatchesRequest) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{4}
}

func (x *MatchesRequest) GetMatchStatus() MatchStatus {
	if x != nil {
		return x.MatchStatus
	}
	return MatchStatus_NONE
}

func (x *MatchesRequest) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *MatchesRequest) GetTournamentId() int64 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

type MatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{5}
}

func (x *MatchRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TeamRequest) Reset() {
	*x = TeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamRequest) ProtoMessage() {}

func (x *TeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamRequest.ProtoReflect.Descriptor instead.
func (*TeamRequest) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{6}
}

func (x *TeamRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Handle  string     `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Name    string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Teams   []string   `protobuf:"bytes,4,rep,name=teams,proto3" json:"teams,omitempty"`
	Country string     `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	Type    PlayerType `protobuf:"varint,6,opt,name=type,proto3,enum=vlr.v1.PlayerType" json:"type,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{7}
}

func (x *Player) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetTeams() []string {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *Player) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Player) GetType() PlayerType {
	if x != nil {
		return x.Type
	}
	return PlayerType_PLAYER
}

type TeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon    string    `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Country string    `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Players []*Player `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *TeamResponse) Reset() {
	*x = TeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vlr_v1_vlr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamResponse) ProtoMessage() {}

func (x *TeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vlr_v1_vlr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamResponse.ProtoReflect.Descriptor instead.
func (*TeamResponse) Descriptor() ([]byte, []int) {
	return file_vlr_v1_vlr_proto_rawDescGZIP(), []int{8}
}

func (x *TeamResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TeamResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamResponse) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TeamResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *TeamResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

var File_vlr_v1_vlr_proto protoreflect.FileDescriptor

var file_vlr_v1_vlr_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x6c, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6c, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x09, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xbc, 0x02, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x65, 0x12, 0x2c,
	0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x77, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x61, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x73,
	0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76,
	0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62,
	0x65, 0x73, 0x74, 0x4f, 0x66, 0x22, 0x30, 0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x6c,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76,
	0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2a, 0x40,
	0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x56, 0x45,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03,
	0x2a, 0x4a, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x45,
	0x41, 0x44, 0x5f, 0x43, 0x4f, 0x41, 0x43, 0x48, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x53,
	0x53, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x41, 0x43, 0x48, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x03, 0x32, 0xab, 0x01, 0x0a,
	0x03, 0x56, 0x6c, 0x72, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x12, 0x16, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x6c, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x14, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x13, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x6c, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x73, 0x2f, 0x76, 0x6c, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x6c, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vlr_v1_vlr_proto_rawDescOnce sync.Once
	file_vlr_v1_vlr_proto_rawDescData = file_vlr_v1_vlr_proto_rawDesc
)

func file_vlr_v1_vlr_proto_rawDescGZIP() []byte {
	file_vlr_v1_vlr_proto_rawDescOnce.Do(func() {
		file_vlr_v1_vlr_proto_rawDescData = protoimpl.X.CompressGZIP(file_vlr_v1_vlr_proto_rawDescData)
	})
	return file_vlr_v1_vlr_proto_rawDescData
}

var file_vlr_v1_vlr_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_vlr_v1_vlr_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_vlr_v1_vlr_proto_goTypes = []interface{}{
	(MatchStatus)(0),            // 0: vlr.v1.MatchStatus
	(PlayerType)(0),             // 1: vlr.v1.PlayerType
	(*MatchTeam)(nil),           // 2: vlr.v1.MatchTeam
	(*Match)(nil),               // 3: vlr.v1.Match
	(*Tournament)(nil),          // 4: vlr.v1.Tournament
	(*MatchesResponse)(nil),     // 5: vlr.v1.MatchesResponse
	(*MatchesRequest)(nil),      // 6: vlr.v1.MatchesRequest
	(*MatchRequest)(nil),        // 7: vlr.v1.MatchRequest
	(*TeamRequest)(nil),         // 8: vlr.v1.TeamRequest
	(*Player)(nil),              // 9: vlr.v1.Player
	(*TeamResponse)(nil),        // 10: vlr.v1.TeamResponse
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_vlr_v1_vlr_proto_depIdxs = []int32{
	2,  // 0: vlr.v1.Match.team_one:type_name -> vlr.v1.MatchTeam
	2,  // 1: vlr.v1.Match.team_two:type_name -> vlr.v1.MatchTeam
	0,  // 2: vlr.v1.Match.match_status:type_name -> vlr.v1.MatchStatus
	4,  // 3: vlr.v1.Match.tournament:type_name -> vlr.v1.Tournament
	11, // 4: vlr.v1.Match.date:type_name -> google.protobuf.Timestamp
	3,  // 5: vlr.v1.MatchesResponse.matches:type_name -> vlr.v1.Match
	0,  // 6: vlr.v1.MatchesRequest.match_status:type_name -> vlr.v1.MatchStatus
	11, // 7: vlr.v1.MatchesRequest.date:type_name -> google.protobuf.Timestamp
	1,  // 8: vlr.v1.Player.type:type_name -> vlr.v1.PlayerType
	9,  // 9: vlr.v1.TeamResponse.players:type_name -> vlr.v1.Player
	6,  // 10: vlr.v1.Vlr.GetMatches:input_type -> vlr.v1.MatchesRequest
	7,  // 11: vlr.v1.Vlr.GetMatch:input_type -> vlr.v1.MatchRequest
	8,  // 12: vlr.v1.Vlr.GetTeam:input_type -> vlr.v1.TeamRequest
	5,  // 13: vlr.v1.Vlr.GetMatches:output_type -> vlr.v1.MatchesResponse
	3,  // 14: vlr.v1.Vlr.GetMatch:output_type -> vlr.v1.Match
	10, // 15: vlr.v1.Vlr.GetTeam:output_type -> vlr.v1.TeamResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_vlr_v1_vlr_proto_init() }
func file_vlr_v1_vlr_proto_init() {
	if File_vlr_v1_vlr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vlr_v1_vlr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tournament); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vlr_v1_vlr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vlr_v1_vlr_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vlr_v1_vlr_proto_goTypes,
		DependencyIndexes: file_vlr_v1_vlr_proto_depIdxs,
		EnumInfos:         file_vlr_v1_vlr_proto_enumTypes,
		MessageInfos:      file_vlr_v1_vlr_proto_msgTypes,
	}.Build()
	File_vlr_v1_vlr_proto = out.File
	file_vlr_v1_vlr_proto_rawDesc = nil
	file_vlr_v1_vlr_proto_goTypes = nil
	file_vlr_v1_vlr_proto_depIdxs = nil
}
